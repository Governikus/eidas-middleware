package de.governikus.eumw.poseidas.server.timer;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.security.Security;
import java.util.Base64;

import org.apache.tomcat.util.http.fileupload.FileUtils;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.boot.web.context.WebServerInitializedEvent;

import de.governikus.eumw.poseidas.eidserver.crl.CertificationRevocationListImpl;
import de.governikus.eumw.poseidas.server.idprovider.config.CvcTlsCheck;
import de.governikus.eumw.poseidas.server.idprovider.config.PoseidasConfigurator;
import de.governikus.eumw.poseidas.server.pki.PermissionDataHandling;
import de.governikus.eumw.poseidas.server.pki.TerminalPermission;
import de.governikus.eumw.poseidas.server.pki.TerminalPermissionAO;
import lombok.extern.slf4j.Slf4j;


@Slf4j
@ExtendWith(MockitoExtension.class)
class StartupListenerTest
{

  private static final String MASTERLIST_BASE64 = "";

  private static final String JAVA_IO_TMPDIR = System.getProperty("java.io.tmpdir") + "/poseidas";

  private static String tempDirectory;

  @Mock
  private PermissionDataHandling permissionDataHandling;

  @Mock
  private TerminalPermissionAO facade;

  @Mock
  private CvcTlsCheck cvcTlsCheck;

  @Mock
  private WebServerInitializedEvent webServerInitializedEvent;

  StartupListener startupListener;

  @BeforeAll
  public static void setUp()
  {
    Security.addProvider(new BouncyCastleProvider());
    PoseidasConfigurator.reset();
  }

  @AfterEach
  public void reset() throws IOException
  {
    PoseidasConfigurator.reset();
    CertificationRevocationListImpl.reset();
    FileUtils.deleteDirectory(new File(tempDirectory));
    log.trace("Deleted random temp dir: {}", tempDirectory);
  }


  @Test
  void testWhenTerminalPermissionIsNullThenCRLNotInitialized() throws Exception
  {
    tempDirectory = JAVA_IO_TMPDIR + "-" + (int)(Math.random() * 1000000);
    Files.createDirectory(Paths.get(tempDirectory));
    log.trace("Generated random temp dir: {}", tempDirectory);
    Path resourceDirectory = Paths.get("src", "test", "resources");
    File source = new File(resourceDirectory + "/POSeIDAS.xml");
    File dest = new File(tempDirectory + "/POSeIDAS.xml");
    Files.copy(source.toPath(), dest.toPath(), StandardCopyOption.REPLACE_EXISTING);
    System.setProperty("spring.config.additional-location", Paths.get(tempDirectory).toString());
    startupListener = new StartupListener(permissionDataHandling, facade, cvcTlsCheck);
    startupListener.onApplicationEvent(webServerInitializedEvent);

    Mockito.verify(permissionDataHandling, Mockito.times(1)).renewMasterAndDefectList();
    Assertions.assertThrows(IllegalStateException.class, CertificationRevocationListImpl::getInstance);
    Mockito.verify(cvcTlsCheck, Mockito.times(1)).check();

  }

  @Test
  void testWhenMasterlistPresentThenCRLInitialized() throws Exception
  {
    tempDirectory = JAVA_IO_TMPDIR + "-" + (int)(Math.random() * 1000000);
    Files.createDirectory(Paths.get(tempDirectory));
    log.trace("Generated random temp dir: {}", tempDirectory);
    Path resourceDirectory = Paths.get("src", "test", "resources");
    File source = new File(resourceDirectory + "/POSeIDAS.xml");
    File dest = new File(tempDirectory + "/POSeIDAS.xml");
    Files.copy(source.toPath(), dest.toPath(), StandardCopyOption.REPLACE_EXISTING);
    System.setProperty("spring.config.additional-location", Paths.get(tempDirectory).toString());
    startupListener = new StartupListener(permissionDataHandling, facade, cvcTlsCheck);
    TerminalPermission terminalPermission = Mockito.mock(TerminalPermission.class);
    Mockito.when(facade.getTerminalPermission(Mockito.anyString())).thenReturn(terminalPermission);
    Mockito.when(terminalPermission.getMasterList())
           .thenReturn(Base64.getDecoder().decode(MASTERLIST_BASE64));
    startupListener.onApplicationEvent(webServerInitializedEvent);

    Mockito.verify(permissionDataHandling, Mockito.times(1)).renewMasterAndDefectList();
    Assertions.assertNotNull(CertificationRevocationListImpl.getInstance());
    Mockito.verify(cvcTlsCheck, Mockito.times(1)).check();
  }
}
